plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.jetbrains.kotlin.kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.ang.acb.addressbook"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        //testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.ang.acb.addressbook.utils.MainTestRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    // Build fails after adding the test coroutines dependency
    // https://github.com/Kotlin/kotlinx.coroutines/issues/2023
    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }

    // Sharing code between unit tests and instrumentation tests
    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDirs += sharedTestDir
        }
        androidTest {
            java.srcDirs += sharedTestDir
        }
    }
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":data"))

    // Kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Kotlin.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${Kotlin.coroutines}"

    // Hilt
    implementation "com.google.dagger:hilt-android:${Google.hilt}"
    kapt "com.google.dagger:hilt-compiler:${Google.hilt}"

    // Room
    implementation "androidx.room:room-runtime:${AndroidX.room}"
    implementation "androidx.room:room-ktx:${AndroidX.room}"
    kapt "androidx.room:room-compiler:${AndroidX.room}"

    // AndroidX
    implementation "androidx.core:core-ktx:${AndroidX.core}"
    implementation "androidx.appcompat:appcompat:${AndroidX.appcompat}"
    implementation "androidx.constraintlayout:constraintlayout:${AndroidX.constraintLayout}"
    implementation "androidx.fragment:fragment-ktx:${AndroidX.fragmentKtx}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${AndroidX.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${AndroidX.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:${AndroidX.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${AndroidX.lifecycle}"
    implementation "androidx.navigation:navigation-fragment-ktx:${AndroidX.navigation}"
    implementation "androidx.navigation:navigation-ui-ktx:${AndroidX.navigation}"
    implementation "com.google.android.material:material:${Google.material}"

    // Utils
    implementation "com.jakewharton.timber:timber:${Utils.timber}"

    // Testing
    testImplementation "junit:junit:${Testing.junit}"
    testImplementation "org.hamcrest:hamcrest-library:${Testing.hamcrest}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${Kotlin.coroutines}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Kotlin.coroutines}"
    testImplementation "androidx.test:core:${Testing.androidxCore}"
    testImplementation "androidx.test.ext:junit:${Testing.junitExt}"
    testImplementation "androidx.arch.core:core-testing:${Testing.archCore}"
    testImplementation "androidx.room:room-testing:${AndroidX.room}"
    testImplementation "com.google.dagger:hilt-android-testing:${Google.hilt}"
    kaptTest "com.google.dagger:hilt-compiler:${Google.hilt}"

    kaptAndroidTest "com.google.dagger:hilt-compiler:${Google.hilt}"
    androidTestImplementation "com.google.dagger:hilt-android-testing:${Google.hilt}"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${Kotlin.coroutines}"
    androidTestImplementation "androidx.test:core:${Testing.androidxCore}"
    androidTestImplementation "androidx.test:runner:${Testing.runner}" // AndroidJUnitRunner
    androidTestImplementation "androidx.test:rules:${Testing.rules}"  // JUnit Rules
    androidTestImplementation "androidx.test.ext:junit:${Testing.junitExt}" // Assertions
    androidTestImplementation "androidx.test.ext:truth:${Testing.truthExt}"
    androidTestImplementation "org.hamcrest:hamcrest-library:${Testing.hamcrest}"
    androidTestImplementation "androidx.arch.core:core-testing:${Testing.archCore}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${Testing.espresso}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${Testing.espresso}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${Testing.espresso}"
    androidTestImplementation "androidx.test.espresso:espresso-intents:${Testing.espresso}"
}
